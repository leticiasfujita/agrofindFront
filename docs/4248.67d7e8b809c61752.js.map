{"version":3,"file":"4248.67d7e8b809c61752.js","mappings":"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","names":["Checkbox","constructor","hostRef","registerInstance","this","ionChange","createEvent","ionFocus","ionBlur","inputId","checkboxIds","inheritedAttributes","setChecked","state","isChecked","checked","emit","value","toggleChecked","ev","preventDefault","setFocus","indeterminate","onFocus","onBlur","onClick","disabled","color","undefined","name","labelPlacement","justify","alignment","componentWillLoad","Object","assign","inheritAriaAttributes","el","focusEl","focus","render","getSVGPath","mode","getIonMode","path","renderHiddenInput","h","Host","key","class","createColorClasses","f","hostContext","interactive","type","id","onChange","ref","textContent","part","viewBox","d","getElement","style","ios","md","selector","closest","cssClassMap","length","getClassMap","classes","map","getClassList","Array","isArray","split","filter","c","trim","forEach","SCHEME","openURL","_ref","_asyncToGenerator","url","direction","animation","test","router","document","querySelector","push","_x","_x2","_x3","_x4","apply","arguments"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./node_modules/@ionic/core/dist/esm/ion-checkbox.entry.js","./node_modules/@ionic/core/dist/esm/theme-01f3f29c.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { r as registerInstance, d as createEvent, h, f as Host, i as getElement } from './index-c71c5417.js';\nimport { i as inheritAriaAttributes, d as renderHiddenInput } from './helpers-da915de8.js';\nimport { c as createColorClasses, h as hostContext } from './theme-01f3f29c.js';\nimport { b as getIonMode } from './ionic-global-b9c0d1da.js';\n\nconst checkboxIosCss = \":host{--checkbox-background-checked:var(--ion-color-primary, #0054e9);--border-color-checked:var(--ion-color-primary, #0054e9);--checkmark-color:var(--ion-color-primary-contrast, #fff);--transition:none;display:inline-block;position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}:host(.ion-color){--checkbox-background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}.checkbox-wrapper{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.checkbox-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.checkbox-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.checkbox-icon{border-radius:var(--border-radius);position:relative;width:var(--size);height:var(--size);-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--checkbox-background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-justify-space-between) .checkbox-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.checkbox-justify-start) .checkbox-wrapper{-ms-flex-pack:start;justify-content:start}:host(.checkbox-justify-end) .checkbox-wrapper{-ms-flex-pack:end;justify-content:end}:host(.checkbox-alignment-start) .checkbox-wrapper{-ms-flex-align:start;align-items:start}:host(.checkbox-alignment-center) .checkbox-wrapper{-ms-flex-align:center;align-items:center}:host(.checkbox-label-placement-start) .checkbox-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.checkbox-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-end) .checkbox-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.checkbox-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.checkbox-label-placement-stacked) .checkbox-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.checkbox-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.checkbox-label-placement-stacked.checkbox-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.checkbox-label-placement-stacked.checkbox-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--checkbox-background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:50%;--border-width:0.125rem;--border-style:solid;--border-color:rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.23);--checkbox-background:var(--ion-item-background, var(--ion-background-color, #fff));--size:min(1.375rem, 55.836px);--checkmark-width:1.5px}:host(.checkbox-disabled){opacity:0.3}\";\nconst IonCheckboxIosStyle0 = checkboxIosCss;\n\nconst checkboxMdCss = \":host{--checkbox-background-checked:var(--ion-color-primary, #0054e9);--border-color-checked:var(--ion-color-primary, #0054e9);--checkmark-color:var(--ion-color-primary-contrast, #fff);--transition:none;display:inline-block;position:relative;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2}:host(.in-item){-ms-flex:1 1 0px;flex:1 1 0;width:100%;height:100%}:host([slot=start]),:host([slot=end]){-ms-flex:initial;flex:initial;width:auto}:host(.ion-color){--checkbox-background-checked:var(--ion-color-base);--border-color-checked:var(--ion-color-base);--checkmark-color:var(--ion-color-contrast)}.checkbox-wrapper{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-ms-flex-align:center;align-items:center;height:inherit;cursor:inherit}.label-text-wrapper{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host(.in-item) .label-text-wrapper{margin-top:10px;margin-bottom:10px}:host(.in-item.checkbox-label-placement-stacked) .label-text-wrapper{margin-top:10px;margin-bottom:16px}:host(.in-item.checkbox-label-placement-stacked) .native-wrapper{margin-bottom:10px}.label-text-wrapper-hidden{display:none}input{position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;margin:0;padding:0;border:0;outline:0;clip:rect(0 0 0 0);opacity:0;overflow:hidden;-webkit-appearance:none;-moz-appearance:none}.native-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.checkbox-icon{border-radius:var(--border-radius);position:relative;width:var(--size);height:var(--size);-webkit-transition:var(--transition);transition:var(--transition);border-width:var(--border-width);border-style:var(--border-style);border-color:var(--border-color);background:var(--checkbox-background);-webkit-box-sizing:border-box;box-sizing:border-box}.checkbox-icon path{fill:none;stroke:var(--checkmark-color);stroke-width:var(--checkmark-width);opacity:0}:host(.checkbox-justify-space-between) .checkbox-wrapper{-ms-flex-pack:justify;justify-content:space-between}:host(.checkbox-justify-start) .checkbox-wrapper{-ms-flex-pack:start;justify-content:start}:host(.checkbox-justify-end) .checkbox-wrapper{-ms-flex-pack:end;justify-content:end}:host(.checkbox-alignment-start) .checkbox-wrapper{-ms-flex-align:start;align-items:start}:host(.checkbox-alignment-center) .checkbox-wrapper{-ms-flex-align:center;align-items:center}:host(.checkbox-label-placement-start) .checkbox-wrapper{-ms-flex-direction:row;flex-direction:row}:host(.checkbox-label-placement-start) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-end) .checkbox-wrapper{-ms-flex-direction:row-reverse;flex-direction:row-reverse}:host(.checkbox-label-placement-end) .label-text-wrapper{-webkit-margin-start:16px;margin-inline-start:16px;-webkit-margin-end:0;margin-inline-end:0}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-webkit-margin-start:0;margin-inline-start:0;-webkit-margin-end:16px;margin-inline-end:16px}:host(.checkbox-label-placement-fixed) .label-text-wrapper{-ms-flex:0 0 100px;flex:0 0 100px;width:100px;min-width:100px;max-width:200px}:host(.checkbox-label-placement-stacked) .checkbox-wrapper{-ms-flex-direction:column;flex-direction:column}:host(.checkbox-label-placement-stacked) .label-text-wrapper{-webkit-transform:scale(0.75);transform:scale(0.75);margin-left:0;margin-right:0;margin-bottom:16px;max-width:calc(100% / 0.75)}:host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper{-webkit-transform-origin:left top;transform-origin:left top}:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-start) .label-text-wrapper,:host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-start .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}@supports selector(:dir(rtl)){:host(.checkbox-label-placement-stacked.checkbox-alignment-start:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:right top;transform-origin:right top}}:host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper{-webkit-transform-origin:center top;transform-origin:center top}:host-context([dir=rtl]):host(.checkbox-label-placement-stacked.checkbox-alignment-center) .label-text-wrapper,:host-context([dir=rtl]).checkbox-label-placement-stacked.checkbox-alignment-center .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}@supports selector(:dir(rtl)){:host(.checkbox-label-placement-stacked.checkbox-alignment-center:dir(rtl)) .label-text-wrapper{-webkit-transform-origin:calc(100% - center) top;transform-origin:calc(100% - center) top}}:host(.checkbox-checked) .checkbox-icon,:host(.checkbox-indeterminate) .checkbox-icon{border-color:var(--border-color-checked);background:var(--checkbox-background-checked)}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{opacity:1}:host(.checkbox-disabled){pointer-events:none}:host{--border-radius:calc(var(--size) * .125);--border-width:2px;--border-style:solid;--border-color:rgb(var(--ion-text-color-rgb, 0, 0, 0), 0.6);--checkmark-width:3;--checkbox-background:var(--ion-item-background, var(--ion-background-color, #fff));--transition:background 180ms cubic-bezier(0.4, 0, 0.2, 1);--size:18px}.checkbox-icon path{stroke-dasharray:30;stroke-dashoffset:30}:host(.checkbox-checked) .checkbox-icon path,:host(.checkbox-indeterminate) .checkbox-icon path{stroke-dashoffset:0;-webkit-transition:stroke-dashoffset 90ms linear 90ms;transition:stroke-dashoffset 90ms linear 90ms}:host(.checkbox-disabled) .label-text-wrapper{opacity:0.38}:host(.checkbox-disabled) .native-wrapper{opacity:0.63}\";\nconst IonCheckboxMdStyle0 = checkboxMdCss;\n\nconst Checkbox = class {\n    constructor(hostRef) {\n        registerInstance(this, hostRef);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.inputId = `ion-cb-${checkboxIds++}`;\n        this.inheritedAttributes = {};\n        /**\n         * Sets the checked property and emits\n         * the ionChange event. Use this to update the\n         * checked state in response to user-generated\n         * actions such as a click.\n         */\n        this.setChecked = (state) => {\n            const isChecked = (this.checked = state);\n            this.ionChange.emit({\n                checked: isChecked,\n                value: this.value,\n            });\n        };\n        this.toggleChecked = (ev) => {\n            ev.preventDefault();\n            this.setFocus();\n            this.setChecked(!this.checked);\n            this.indeterminate = false;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.onClick = (ev) => {\n            if (this.disabled) {\n                return;\n            }\n            this.toggleChecked(ev);\n        };\n        this.color = undefined;\n        this.name = this.inputId;\n        this.checked = false;\n        this.indeterminate = false;\n        this.disabled = false;\n        this.value = 'on';\n        this.labelPlacement = 'start';\n        this.justify = 'space-between';\n        this.alignment = 'center';\n    }\n    componentWillLoad() {\n        this.inheritedAttributes = Object.assign({}, inheritAriaAttributes(this.el));\n    }\n    setFocus() {\n        if (this.focusEl) {\n            this.focusEl.focus();\n        }\n    }\n    render() {\n        const { color, checked, disabled, el, getSVGPath, indeterminate, inheritedAttributes, inputId, justify, labelPlacement, name, value, alignment, } = this;\n        const mode = getIonMode(this);\n        const path = getSVGPath(mode, indeterminate);\n        renderHiddenInput(true, el, name, checked ? value : '', disabled);\n        return (h(Host, { key: '0ac95890562c7f035704c40959c69f8c8ca4bc9f', \"aria-checked\": indeterminate ? 'mixed' : `${checked}`, class: createColorClasses(color, {\n                [mode]: true,\n                'in-item': hostContext('ion-item', el),\n                'checkbox-checked': checked,\n                'checkbox-disabled': disabled,\n                'checkbox-indeterminate': indeterminate,\n                interactive: true,\n                [`checkbox-justify-${justify}`]: true,\n                [`checkbox-alignment-${alignment}`]: true,\n                [`checkbox-label-placement-${labelPlacement}`]: true,\n            }), onClick: this.onClick }, h(\"label\", { key: '3f9f7c8383dded8f7997086b25399d052df76b5c', class: \"checkbox-wrapper\" }, h(\"input\", Object.assign({ key: '6fb11d06c424c289357d5d7c1a4d1b967be231d0', type: \"checkbox\", checked: checked ? true : undefined, disabled: disabled, id: inputId, onChange: this.toggleChecked, onFocus: () => this.onFocus(), onBlur: () => this.onBlur(), ref: (focusEl) => (this.focusEl = focusEl) }, inheritedAttributes)), h(\"div\", { key: 'f577a272e5e3f9f1852fc95e40466c80b76309c7', class: {\n                'label-text-wrapper': true,\n                'label-text-wrapper-hidden': el.textContent === '',\n            }, part: \"label\" }, h(\"slot\", { key: '7c9b0b4513e797a1acdf55a5f286563e5f397e9c' })), h(\"div\", { key: 'e47c50a078b8d761ddc5efcb9a9635281b5818f6', class: \"native-wrapper\" }, h(\"svg\", { key: '4dca47179ae15e9094e01c799ef4ed25fbb0d840', class: \"checkbox-icon\", viewBox: \"0 0 24 24\", part: \"container\" }, path)))));\n    }\n    getSVGPath(mode, indeterminate) {\n        let path = indeterminate ? (h(\"path\", { d: \"M6 12L18 12\", part: \"mark\" })) : (h(\"path\", { d: \"M5.9,12.5l3.8,3.8l8.8-8.8\", part: \"mark\" }));\n        if (mode === 'md') {\n            path = indeterminate ? (h(\"path\", { d: \"M2 12H22\", part: \"mark\" })) : (h(\"path\", { d: \"M1.73,12.91 8.1,19.28 22.79,4.59\", part: \"mark\" }));\n        }\n        return path;\n    }\n    get el() { return getElement(this); }\n};\nlet checkboxIds = 0;\nCheckbox.style = {\n    ios: IonCheckboxIosStyle0,\n    md: IonCheckboxMdStyle0\n};\n\nexport { Checkbox as ion_checkbox };\n","/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return typeof color === 'string' && color.length > 0\n        ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter((c) => c != null)\n            .map((c) => c.trim())\n            .filter((c) => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach((c) => (map[c] = true));\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"],"x_google_ignoreList":[0,1]}